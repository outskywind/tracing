<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dafy.skye.zipkin.extend.mapper.RuleMapper" >

    <insert id="add">
        INSERT INTO rule ( `name`, type, service, interface, dimension, `condition`, threshold )
        VALUES
        <foreach collection="list" separator="," item="rule">
        ( #{rule.type}, #{rule.type},
            <choose><when test="rule.service==null">''</when><otherwise>#{rule.service}</otherwise></choose>
            , <choose><when test="rule.spanName==null">''</when><otherwise>#{rule.spanName}</otherwise></choose>
            ,
            #{rule.dimension}, #{rule.condition}, #{rule.thresholdStr} )
        </foreach>
    </insert>

    <select id="list" resultType="com.dafy.skye.zipkin.extend.dto.Rule">
        SELECT `id`,
        `name`,
        `type`,
        `service`,
        `interface` AS spanName,
        `dimension`,
        `condition`,
        `threshold` AS thresholdStr,
        `is_deleted`
        FROM `rule`
        <where>
            is_deleted=0
            <if test="favServices !=null">
            AND
            service in <foreach collection="favServices" open="(" close=")" item="service" separator=",">
            #{service}
            </foreach>
            </if>
        </where>
        UNION ALL
        SELECT `id`,
        `name`,
        `type`,
        `service`,
        `interface` AS spanName,
        `dimension`,
        `condition`,
        `threshold` AS thresholdStr,
        `is_deleted`
        FROM `rule`
        WHERE
            is_deleted=0
            AND
            service =''
    </select>


    <select id="listAll" resultType="com.dafy.skye.zipkin.extend.dto.Rule">
        SELECT `id`,
        `name`,
        `type`,
        `service`,
        `interface` AS spanName,
        `dimension`,
        `condition`,
        `threshold` AS thresholdStr,
        `is_deleted`
        FROM `rule`
        WHERE
        is_deleted=0
    </select>

    <update id="modify">
        UPDATE rule
        <set>
            condition = #{condition},
            threshold = #{thresholdStr}
        </set>
        where id=#{id}
    </update>

    <update id="delete">
        DELETE FROM
            rule
        WHERE
            id IN
        <foreach collection="list" item="ruleid" open="(" separator="," close=")">
        #{ruleid}
        </foreach>
    </update>

</mapper>